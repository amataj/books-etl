package com.example.books.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class BookPageTextAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBookPageTextAllPropertiesEquals(BookPageText expected, BookPageText actual) {
        assertBookPageTextAutoGeneratedPropertiesEquals(expected, actual);
        assertBookPageTextAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBookPageTextAllUpdatablePropertiesEquals(BookPageText expected, BookPageText actual) {
        assertBookPageTextUpdatableFieldsEquals(expected, actual);
        assertBookPageTextUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBookPageTextAutoGeneratedPropertiesEquals(BookPageText expected, BookPageText actual) {
        assertThat(actual)
            .as("Verify BookPageText auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBookPageTextUpdatableFieldsEquals(BookPageText expected, BookPageText actual) {
        assertThat(actual)
            .as("Verify BookPageText relevant properties")
            .satisfies(a -> assertThat(a.getDocumentId()).as("check documentId").isEqualTo(expected.getDocumentId()))
            .satisfies(a -> assertThat(a.getPageNo()).as("check pageNo").isEqualTo(expected.getPageNo()))
            .satisfies(a -> assertThat(a.getText()).as("check text").isEqualTo(expected.getText()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBookPageTextUpdatableRelationshipsEquals(BookPageText expected, BookPageText actual) {
        assertThat(actual)
            .as("Verify BookPageText relationships")
            .satisfies(a -> assertThat(a.getBook()).as("check book").isEqualTo(expected.getBook()));
    }
}
